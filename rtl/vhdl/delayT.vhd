
-- Thanks for XHDL
--/////////////////////////////////////////////////////////////////
--////                                    //////
--/////////////////////////////////////////////////////////////////
--/                                                             ///
--/ This file is generated by Viterbi HDL Code Generator(VHCG)  ///
--/ which is written by Mike Johnson at OpenCores.org  and      ///
--/ distributed under GPL license.                              ///
--/                                                             ///
--/ If you have any advice,                                     ///
--/ please email to jhonson.zhu@gmail.com                       ///
--/                                                             ///
--/////////////////////////////////////////////////////////////////
--/////////////////////////////////////////////////////////////////
--/////////////////////////////////////////////////////////////////
--////                                    //////
--/////////////////////////////////////////////////////////////////
--/                                                             ///
--/ This file is generated by Viterbi HDL Code Generator(VHCG)  ///
--/ which is written by Mike Johnson at OpenCores.org  and      ///
--/ distributed under GPL license.                              ///
--/                                                             ///
--/ If you have any advice,                                     ///
--/ please email to jhonson.zhu@gmail.com                       ///
--/                                                             ///
--/////////////////////////////////////////////////////////////////
--/////////////////////////////////////////////////////////////////


LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.std_logic_unsigned.all;
ENTITY delayT IS
   GENERIC (
      Data_Width                     :  integer := 12;
      Delay_Count                    :  integer := 1);
   PORT (
      mclk                    : IN std_logic;
      rst                     : IN std_logic;
      in_vhcg1                : IN std_logic_vector(Data_Width - 1 DOWNTO 0);
      out_vhcg2               : OUT std_logic_vector(Data_Width - 1 DOWNTO 0));
END delayT;

ARCHITECTURE translated OF delayT IS

   TYPE vhcg_4 IS ARRAY (Delay_Count - 1 DOWNTO 0) OF std_logic_vector(Data_Width - 1 DOWNTO 0);

   SIGNAL regs                     :  vhcg_4;
   SIGNAL temp                     :  integer;
   SIGNAL out_vhcg2_vhcg3          :  std_logic_vector(Data_Width - 1 DOWNTO 0);

BEGIN
   out_vhcg2 <= out_vhcg2_vhcg3;
   out_vhcg2_vhcg3 <= regs(Delay_Count - 1) ;

   PROCESS (mclk, rst)
   BEGIN
      IF (rst = '1') THEN
         FOR temp IN 0 TO (Delay_Count - 1) LOOP
            regs(temp) <= (OTHERS => '0');
         END LOOP;
      ELSIF (mclk'EVENT AND mclk = '1') THEN
         regs(0) <= in_vhcg1;
         FOR temp IN 1 TO (Delay_Count - 1) LOOP
            regs(temp) <= regs(temp - 1);
         END LOOP;
      END IF;
   END PROCESS;

END translated;
